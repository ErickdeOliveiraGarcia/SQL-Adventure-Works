CREATE DATABASE CLIENTE

CREATE TABLE CLIENTE
(CLIENTE_ID INT PRIMARY KEY NOT NULL,
NOME_CLIENTE VARCHAR(25) NOT NULL,
CIDADE VARCHAR(40) NULL,
MESA INT NULL,
VENDEDOR_ID INT NULL)

CREATE TABLE VENDEDOR
(VENDEDOR_ID INT PRIMARY KEY NOT NULL,
NOME VARCHAR(25) NOT NULL,
CIDADE VARCHAR(30) NOT NULL,
COMISSAO NUMERIC(8,2) NOT NULL);

CREATE TABLE PEDIDOS
(NRO_PEDIDO INT PRIMARY KEY NOT NULL,
VALOR_FINAL NUMERIC(8,2)  NULL,
DATA_PEDIDO DATE NOT NULL,
CLIENTE_ID INT NULL,
VENDEDOR_ID INT NULL)

-------------


	ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS
    FOREIGN KEY (CLIENTE_ID)
	REFERENCES CLIENTE (CLIENTE_ID)
 
	ALTER TABLE VENDEDOR ADD CONSTRAINT FK_VENDEDOR
    FOREIGN KEY (VENDEDOR_ID)
    REFERENCES CLIENTE (VENDEDOR_ID)
 
	ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS1
    FOREIGN KEY (CLIENTE_ID)
    REFERENCES CLIENTE (CLIENTE_ID)

	ALTER TABLE PEDIDOS ADD CONSTRAINT FK_PEDIDOS2
    FOREIGN KEY (VENDEDOR_ID)
    REFERENCES VENDEDOR (VENDEDOR_ID)

	ALTER TABLE PEDIDOS
	ALTER COLUMN NRO_PEDIDO INT NULL

	 
INSERT CLIENTE
(CLIENTE_ID, NOME_CLIENTE,CIDADE, MESA, VENDEDOR_ID)
VALUES
(3001,'Brad Guzzan','London', NULL, 5004),
(3002,'Nick Rimando','New York',100,5001),
(3003,'Jozy Altidor','Moscow',200, 5006),
(3004,'Fabian Johson','Paris',300,5005),
(3005,'Graham Zusi','California',200,5002),
(3006,'Brad Davis','New York',200,5001),
(3007,'Julia Green','London',100,5002),
(3008,'Geoff Cameron','Berlin',100,5003)

INSERT VENDEDOR
(VENDEDOR_ID,NOME,CIDADE,COMISSAO)
VALUES
(5001,'James hoog','New York',0.15),
(5002,'Nall knite','Paris',0.13),
(5003,'Lauson Hen','San Jose',0.12),
(5004,'Pit Alex','London',0.11),
(5005,'Mc Lyon','Paris',0.14),
(5006,'Paul Adam','Rome',0.13)

INSERT PEDIDOS
(NRO_PEDIDO,VALOR_FINAL,DATA_PEDIDO,CLIENTE_ID, VENDEDOR_ID)
VALUES
(7001,150.50,'2021-10-05',3005, 5002),
(7002,270.65,'2021-09-10',3001,5004),
(7003,2480.40,'2021-10-10',3008,5003),
(7004,110.50,'2021-08-17',3008,5001),
(7005,2004.60,'2021-07-27',3006,5001),
(7006,948.50,'2021-09-10', 3005,5002),
(7007,5760.00,'2021-09-10',3002,5001),
(7008,270.65,'2021-09-10',3001,5004),
(7009,1983.43,'2021-10-10',3004,5005),
(7010,75.29,'2021-08-17',3003,5006),
(7011,250.45,'2021-06-27',3007,5002),
(7012,3045.60,'2021-04-25',3002,5001)

/*

-- Crie um view que mostre os vendedores da cidade de New York
CREATE VIEW VW_VENDEDOR_YORK
AS
SELECT *
FROM VENDEDOR
WHERE CIDADE = 'New York'

SELECT *
FROM VW_VENDEDOR_YORK



-- Crie uma view que mostre os vendedores de Paris que alcançaram
-- a comissão acima de 11%
CREATE VIEW VW_VENDEDOR_PARIS_COMISSAOMAIOR11
AS
SELECT*
FROM VENDEDOR
WHERE CIDADE = 'Paris' AND COMISSAO > 0.11

SELECT*
FROM VW_VENDEDOR_PARIS_COMISSAOMAIOR11

-- Crie uma view que mostre a quantidade de clientes que foram atendidos
-- por cada mesa
SELECT*
FROM CLIENTE



-- Crie uma view que mostre a quantidade de pedidos por dia, a média da
-- receita gerada no dia, e a soma de tudo que foi vendido no dia
CREATE VIEW VW_QTD_PEDIDO_MÉD_VENDA_SUM_DIA
AS
SELECT DATA_PEDIDO, COUNT(DATA_PEDIDO) AS 'QTD PEDIDOS DIA', AVG(VALOR_FINAL) AS 'MÉDIA DE VENDAS',SUM(VALOR_FINAL) AS 'SOMA TOTAL VENDAS'
FROM PEDIDOS
GROUP BY DATA_PEDIDO
HAVING COUNT(DATA_PEDIDO)>1



SELECT*
FROM VW_QTD_PEDIDO_MÉD_VENDA_SUM_DIA

--Crie um view que mostre o número do pedido, o total vendedor, o
--nome do vendedor e o nome de cada um seus clientes.

CREATE VIEW VW_NOMES
AS 
SELECT NRO_PEDIDO, VALOR_FINAL, VENDEDOR.NOME, CLIENTE.NOME_CLIENTE
FROM PEDIDOS, CLIENTE, VENDEDOR
WHERE PEDIDOS.CLIENTE_ID = CLIENTE.CLIENTE_ID AND PEDIDOS.VENDEDOR_ID = VENDEDOR.VENDEDOR_ID


SELECT *
FROM VW_NOMES
SELECT*
FROM CLIENTE
SELECT*
FROM VENDEDOR
SELECT*
FROM PEDIDOS

-- Crie uma view que mostre os vendedores que tem mais de um cliente

SELECT VENDEDOR_ID, CLIENTE_ID
FROM CLIENTE
ORDER BY CLIENTE_ID ASC

--Crie uma view que mostre o id do vendedor, nome do vendedor
--e o dia que aquele vendedor teve a maior venda do dia
CREATE VIEW VW_MAIORVENDA
AS
SELECT A.DATA_PEDIDO, VENDEDOR.VENDEDOR_ID, VENDEDOR.NOME
FROM VENDEDOR, PEDIDOS A
WHERE VENDEDOR.VENDEDOR_ID = A.VENDEDOR_ID
AND A.VALOR_FINAL = (SELECT MAX(VALOR_FINAL) FROM PEDIDOS B
WHERE A.DATA_PEDIDO = B.DATA_PEDIDO)


SELECT*
FROM VW_MAIORVENDA
------------aula 28/09/2021---------------
USE CLIENTE

CREATE TABLE LOG_FATURAMENTO
(DATA_VENDA DATE NOT NULL,
TOTAL_VENDA MONEY NOT NULL)


SELECT * FROM LOG_FATURAMENTO
SELECT * FROM [PEDIDOS]


SELECT [DATA_PEDIDO], SUM([VALOR_FINAL]) FROM PEDIDOS
GROUP BY [DATA_PEDIDO]

/*
CREATE TRIGGER <NOME DA TRIGGER>
ON <NOME DA TABELA>
[FOR/AFTER/INSTEAD OF] [INSERT/UPDATE/DELETE]
AS BEGIN
<CORPO DA TRIGGER>
FOR = EXECUTA AO MESMO TEMPO QUE O COMANDO
AFTER = EXECUTA DEPOIS DO COMANDO
INSTEAD OD = EXECUTA NO LUGAR DO COMANDO
*/
CREATE TRIGGER TG_FATURAMENTO
ON [PEDIDOS]
AFTER INSERT, DELETE, UPDATE
AS
BEGIN
 --NÃO TENHA DADOS REPETIDOS
 DELETE FROM LOG_FATURAMENTO
 --INSERIR OS NOVOS VALORES
 INSERT INTO LOG_FATURAMENTO (DATA_VENDA, TOTAL_VENDA)
 SELECT DATA_PEDIDO AS DATA_VENDA, SUM(VALOR_FINAL) AS TOTAL_VENDA
 FROM PEDIDOS GROUP BY DATA_PEDIDO
--NÃO TENHA DADOS REPETIDOS
--DELETE FROM LOG_FATURAMENTO;

--INSERIR OS NOVOS VALORES
INSERT INTO LOG_FATURAMENTO (DATA_VENDA, TOTAL_VENDA)
SELECT [DATA_PEDIDO] AS DATA_VENDA, SUM([VALOR_FINAL]) AS TOTAL_VENDA
FROM [PEDIDOS] GROUP BY [DATA_PEDIDO]
END;


SELECT * FROM LOG_FATURAMENTO

INSERT INTO [PEDIDOS]
([CLIENTE_ID], [DATA_PEDIDO], [VALOR_FINAL], [VENDEDOR_ID],NRO_PEDIDO)
VALUES
(3005, '2021-09-28', 500.00, 5003,7999)

SELECT * FROM LOG_FATURAMENTO

INSERT INTO [PEDIDOS]
([CLIENTE_ID], [DATA_PEDIDO], [VALOR_FINAL], [VENDEDOR_ID], NRO_PEDIDO)
VALUES
(3005, '2021-09-28', 250.00, 5003, 7998)

INSERT INTO [PEDIDOS]
([CLIENTE_ID], [DATA_PEDIDO], [VALOR_FINAL], [VENDEDOR_ID], NRO_PEDIDO)
VALUES
(3005, '2021-09-28', 400.00, 5003,7995)

------
CREATE TABLE LOG_PEDIDOS
(NRO_PEDIDO INT,
SITUACAO VARCHAR(MAX))



CREATE TRIGGER TG_PEDIDO
ON PEDIDOS
AFTER INSERT, DELETE
AS
BEGIN
--GRAVAR NOVOS REGISTROS
--INSERT = COMPRA
INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO_PEDIDO] AS NRO_PEDIDO, 'COMPRA' AS SITUACAO
FROM INSERTED
WHERE NOT EXISTS
(SELECT * FROM DELETED WHERE DELETED.[NRO_PEDIDO] = INSERTED.[NRO_PEDIDO])

--GRAVAR AS EXCLUSÕES
--DELETE = CANCELAMENTO
INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO_PEDIDO] AS NRO_PEDIDO, 'CANCELAMENTO' AS SITUACAO
FROM DELETED
WHERE NOT EXISTS
(SELECT * FROM INSERTED WHERE INSERTED.[NRO_PEDIDO] = DELETED.[NRO_PEDIDO])
END;



SELECT * FROM LOG_PEDIDOS



INSERT INTO [PEDIDOS]
([CLIENTE_ID], [DATA_PEDIDO], [VALOR_FINAL], [VENDEDOR_ID], NRO_PEDIDO)
VALUES
(3004, '2021-09-28', 400.00, 5004,7991)

SELECT * FROM PEDIDOS

DELETE FROM PEDIDOS
WHERE [NRO_PEDIDO] = 7991

-----EXERCICIOS-----

CREATE TRIGGER TG_CLIENTE
ON CLIENTE
AFTER INSERT, DELETE
AS
BEGIN
--GRAVAR NOVOS REGISTROS
--INSERT = COMPRA
INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO PEDIDO] AS NRO_PEDIDO, 'COMPRA' AS SITUACAO
FROM INSERTED
WHERE NOT EXISTS
(SELECT * FROM DELETED WHERE DELETED.[NRO PEDIDO] = INSERTED.[NRO PEDIDO])

--GRAVAR AS EXCLUSÕES
--DELETE = CANCELAMENTO
INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO PEDIDO] AS NRO_PEDIDO, 'CANCELAMENTO' AS SITUACAO
FROM DELETED
WHERE NOT EXISTS
(SELECT * FROM INSERTED WHERE INSERTED.[NRO PEDIDO] = DELETED.[NRO PEDIDO])
END;

SELECT * FROM LOG_PEDIDOS

INSERT INTO [PEDIDOS]
([CLIENTE ID], [DATA PEDIDO], [VALOR FINAL], [VENDEDOR ID])
VALUES
(3004, '2021-09-28', 400.00, 5004)
SELECT * FROM PEDIDOS
DELETE FROM PEDIDOS
WHERE [NRO PEDIDO] = 7017

----------------ATIVIDADES------------

/*
CREATE TABLE LOG_CLIENTES
([CLIENTE ID] INT NOT NULL,
[SOMA FINAL]MONEY NOT NULL,
[ULTIMO PEDIDO]DATE NOT NULL)

CREATE TRIGGER [TG CLIENTES]
ON [PEDIDOS]
AFTER INSERT, DELETE, UPDATE
AS
BEGIN
	DELETE FROM [LOG CLIENTES];

	INSERT INTO [LOG CLIENTES]([CLIENTE ID], [SOMA FINAL], [ULTIMO PEDIDO])
	SELECT [CLIENTE ID], SUM([VALOR_FINAL]) AS [SOMA FINAL],
	MAX([DATA PEDIDO]) AS [ULTIMO PEDIDO] FROM [PEDIDOS]
	GROUP BY [CLIENTE ID];

	END;
*/
CREATE TABLE LOG_VENDEDOR
([VENDEDOR ID] INT NOT NULL,
[SITUAÇÃO] VARCHAR(MAX) NOT NULL,
[DATA] DATE NOT NULL)

GO
CREATE TRIGGER TG_VENDEDORES
ON VENDEDOR
AFTER INSERT, DELETE
AS
BEGIN
INSERT INTO [LOG_VENDEDOR] (VENDEDOR ID,SITUAÇÃO, DATA)
SELECT VENDEDOR ID, 'ADMITIDO' AS SITUAÇÃO, GETDATE() AS DATA
FROM INSERTED 
WHERE NOT EXISTS 
(SELECT* FROM DELETED WHERE INSERTED.VENDEDOR_ID = DELETED.VENDEDOR_ID)

INSERT INTO [LOG_VENDEDOR] ([VENDEDOR ID], SITUAÇÃO, DATA)
SELECT [VENDEDOR ID], 'DEMITIDO' AS SITUACAO, GETDATE() AS DATA
FROM DELETED 
WHERE NOT EXISTS
(SELECT * FROM INSERTED WHERE DELETED.VENDEDOR_ID = INSERTED.VENDEDOR_ID)

END;


---------------------------------------------------------------------------------
SELECT* FROM LOG_VENDEDOR

INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO_PEDIDO] AS NRO_PEDIDO, 'COMPRA' AS SITUACAO
FROM INSERTED
WHERE NOT EXISTS
(SELECT * FROM DELETED WHERE DELETED.[NRO_PEDIDO] = INSERTED.[NRO_PEDIDO])

--GRAVAR AS EXCLUSÕES
--DELETE = CANCELAMENTO
INSERT INTO LOG_PEDIDOS ([NRO_PEDIDO], SITUACAO)
SELECT [NRO_PEDIDO] AS NRO_PEDIDO, 'CANCELAMENTO' AS SITUACAO
FROM DELETED
WHERE NOT EXISTS
(SELECT * FROM INSERTED WHERE INSERTED.[NRO_PEDIDO] = DELETED.[NRO_PEDIDO])
END;

---------------------------------------------------------------------------------
*/
USE CLIENTE
CREATE TABLE [LOG CIDADES]
([CIDADE] VARCHAR(150) NOT NULL,
[QUANTIDADE] INT NOT NULL)
GO
CREATE TRIGGER [TG CIDADE]
ON [CLIENTE]
AFTER INSERT, UPDATE, DELETE
AS
BEGIN 
	INSERT INTO [LOG CIDADES]([CIDADE],[QUANTIDADE])
	SELECT [CIDADE], COUNT([CIDADE]) AS [QUANTIDADE] FROM CLIENTE GROUP BY CIDADE
END;
---------------------------------------------------------------------------------

USE CLIENTE

CREATE TABLE [LOG_ATENDIMENTO]
([NOME VENDEDOR] VARCHAR(MAX),
[NOME CLIENTE] VARCHAR(MAX),
[MESA] INT )

GO

CREATE TRIGGER [LOG_ATENDIMENTO]([NOME VENDEDOR], [NOME CLIENTE], [MESA])
ON CLIENTE
AFTER INSERT, DELETE
AS
BEGIN


	INSERT INTO [LOG_ATENDIMENTO]([NOME VENDEDOR], [NOME CLIENTE], [MESA])
	SELECT A.NOME AS NOME VENDEDOR, B.NOME CLIENTE AS NOME CLIENTE, B.MESA AS MESA
	FROM VENDEDOR A, CLIENTE B
	WHERE A.VENDEDOR_ID = B.VENDEDOR_ID AND B.MESA IS NOT NULL GROUP BY NOME 
END;

----EXEMPLO FUNÇÃO

SELECT SUM([VALOR_FINAL]) FROM PEDIDOS

--CREATE FUNCTION  FATURAMENTO CLIENTE

CREATE FUNCTION FATURAMENTOCLIENTE (@ID AS INT)
RETURNS FLOAT
AS 
BEGIN
	DECLARE @FATURAMENTO FLOAT
	SELECT @FATURAMENTO = SUM([VALOR_FINAL]) FROM PEDIDOS WHERE CLIENTE_ID = @ID
	RETURN @FATURAMENTO
END;
GO
SELECT DISTINCT CLIENTE_ID,  [dbo].FATURAMENTOCLIENTE([CLIENTE_ID]) FROM PEDIDOS